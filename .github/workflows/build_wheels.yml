name: Build wheels

on:
  workflow_dispatch:  # Manual trigger
  release:
    types: [created]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} for Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12']

    steps:
      - uses: actions/checkout@v3
        with:
            lfs: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build wheel setuptools twine
      
      - name: Build package with platform tag
        run: |
          python -m build
          # Rename wheel to include platform/Python info
          mv dist/*.whl dist/lamar-1.0.0-py${{ matrix.python-version }}-${{ matrix.os }}.whl
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
          path: dist/*.whl
          
      # New steps for GitHub Release upload
      - name: Upload to GitHub Release
        if: github.event_name == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*.whl
          file_glob: true
          tag: ${{ github.ref }}
          overwrite: true

  # New job to collect and upload all wheels
  upload_all:
    name: Upload all wheels to TestPyPI
    needs: build_wheels  # Wait for all build jobs to complete
    runs-on: ubuntu-latest
    
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: pip install twine
        
      - name: Download all wheels
        uses: actions/download-artifact@v4
        with:
          path: ./dist
          pattern: wheels-*
          merge-multiple: true
      - name: Verify build output
        run: |
            ls -l dist/
            python -m zipfile -t dist/*.whl
            
      - name: Display structure
        run: ls -R ./dist
        
      - name: Upload all wheels to TestPyPI
        env:
          TWINE_USERNAME: ${{ secrets.TESTPYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TESTPYPI_PASSWORD }}
        run: |
          twine upload --verbose --repository testpypi ./dist/*.whl